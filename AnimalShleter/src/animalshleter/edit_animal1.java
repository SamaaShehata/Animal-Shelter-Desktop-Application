/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package animalshleter;

import static animalshleter.add_animal1.convertUtilToSql;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.Connection;  
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.lang.model.util.Types;
import javax.swing.JOptionPane;
public class edit_animal1 extends javax.swing.JFrame {

     String genderrr,sizeee;
    int adoptionStatement,spiecesID,breedID;
    Connection con;
    public edit_animal1() {
        initComponents();
        createConnection();
        fillPetNamecombo();
        fillBreedscombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        breedCombo = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        petName = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        nameOFpet = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        birthdatePet = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        malebutton = new javax.swing.JRadioButton();
        femalebuton = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        smallB = new javax.swing.JRadioButton();
        mediumB = new javax.swing.JRadioButton();
        largB = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        rabbit = new javax.swing.JRadioButton();
        dog = new javax.swing.JRadioButton();
        cat = new javax.swing.JRadioButton();
        color = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        intakeDate = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        bird = new javax.swing.JRadioButton();
        final_breed = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        notadoptedButton = new javax.swing.JRadioButton();
        adoptedButton = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        adoptionDate = new javax.swing.JTextField();

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/images/low-angle-photo-of-bird-flying-across-dark-clouds-2715005 (2).jpg"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("animal shelter");
        setMinimumSize(new java.awt.Dimension(650, 640));
        setPreferredSize(new java.awt.Dimension(669, 640));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(204, 153, 0));

        jLabel10.setBackground(new java.awt.Color(204, 204, 204));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Edit animal");
        jPanel1.add(jLabel10);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 650, 80);

        breedCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breedComboActionPerformed(evt);
            }
        });
        getContentPane().add(breedCombo);
        breedCombo.setBounds(250, 550, 190, 30);

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));
        jPanel2.setLayout(null);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("pet name");
        jPanel2.add(jLabel15);
        jLabel15.setBounds(30, 10, 220, 44);

        petName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petNameActionPerformed(evt);
            }
        });
        jPanel2.add(petName);
        petName.setBounds(260, 20, 180, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("pet name");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(30, 70, 210, 50);

        nameOFpet.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.add(nameOFpet);
        nameOFpet.setBounds(260, 70, 190, 40);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("birth date");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(30, 110, 210, 50);

        birthdatePet.setBackground(new java.awt.Color(204, 204, 204));
        birthdatePet.setToolTipText("yyyy/mm/dd");
        birthdatePet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthdatePetActionPerformed(evt);
            }
        });
        jPanel2.add(birthdatePet);
        birthdatePet.setBounds(260, 120, 190, 40);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("gender");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(30, 160, 180, 29);

        malebutton.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup1.add(malebutton);
        malebutton.setFont(new java.awt.Font("Ink Free", 0, 24)); // NOI18N
        malebutton.setForeground(new java.awt.Color(255, 255, 255));
        malebutton.setText("male");
        malebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                malebuttonActionPerformed(evt);
            }
        });
        jPanel2.add(malebutton);
        malebutton.setBounds(260, 160, 80, 39);

        femalebuton.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup1.add(femalebuton);
        femalebuton.setFont(new java.awt.Font("Ink Free", 0, 24)); // NOI18N
        femalebuton.setForeground(new java.awt.Color(255, 255, 255));
        femalebuton.setText("female");
        femalebuton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femalebutonActionPerformed(evt);
            }
        });
        jPanel2.add(femalebuton);
        femalebuton.setBounds(360, 160, 120, 39);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("size");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(30, 200, 150, 29);

        smallB.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup4.add(smallB);
        smallB.setFont(new java.awt.Font("Ink Free", 0, 24)); // NOI18N
        smallB.setForeground(new java.awt.Color(255, 255, 255));
        smallB.setText("small");
        smallB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smallBActionPerformed(evt);
            }
        });
        jPanel2.add(smallB);
        smallB.setBounds(260, 190, 77, 39);

        mediumB.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup4.add(mediumB);
        mediumB.setFont(new java.awt.Font("Ink Free", 0, 24)); // NOI18N
        mediumB.setForeground(new java.awt.Color(255, 255, 255));
        mediumB.setText("medium");
        mediumB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mediumBActionPerformed(evt);
            }
        });
        jPanel2.add(mediumB);
        mediumB.setBounds(360, 190, 101, 39);

        largB.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup4.add(largB);
        largB.setFont(new java.awt.Font("Ink Free", 0, 24)); // NOI18N
        largB.setForeground(new java.awt.Color(255, 255, 255));
        largB.setText("large");
        largB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                largBActionPerformed(evt);
            }
        });
        jPanel2.add(largB);
        largB.setBounds(470, 190, 77, 39);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("color");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(30, 240, 80, 50);

        rabbit.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup2.add(rabbit);
        rabbit.setFont(new java.awt.Font("Ink Free", 0, 24)); // NOI18N
        rabbit.setForeground(new java.awt.Color(255, 255, 255));
        rabbit.setText("rabbits");
        rabbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rabbitActionPerformed(evt);
            }
        });
        jPanel2.add(rabbit);
        rabbit.setBounds(450, 330, 101, 39);

        dog.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup2.add(dog);
        dog.setFont(new java.awt.Font("Ink Free", 0, 24)); // NOI18N
        dog.setForeground(new java.awt.Color(255, 255, 255));
        dog.setText("dogs");
        dog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dogActionPerformed(evt);
            }
        });
        jPanel2.add(dog);
        dog.setBounds(360, 330, 71, 39);

        cat.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup2.add(cat);
        cat.setFont(new java.awt.Font("Ink Free", 0, 24)); // NOI18N
        cat.setForeground(new java.awt.Color(255, 255, 255));
        cat.setText("cats");
        cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catActionPerformed(evt);
            }
        });
        jPanel2.add(cat);
        cat.setBounds(260, 330, 90, 39);

        color.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.add(color);
        color.setBounds(260, 240, 190, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("species");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(30, 330, 100, 29);

        intakeDate.setBackground(new java.awt.Color(204, 204, 204));
        intakeDate.setToolTipText("yyyy/mm/dd");
        jPanel2.add(intakeDate);
        intakeDate.setBounds(260, 290, 190, 40);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("intake date");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(30, 280, 220, 50);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("adoption date");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(30, 370, 250, 50);

        bird.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup2.add(bird);
        bird.setFont(new java.awt.Font("Ink Free", 0, 24)); // NOI18N
        bird.setForeground(new java.awt.Color(255, 255, 255));
        bird.setText("birds");
        bird.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birdActionPerformed(evt);
            }
        });
        jPanel2.add(bird);
        bird.setBounds(560, 330, 80, 39);

        final_breed.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.add(final_breed);
        final_breed.setBounds(450, 460, 150, 40);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("breeds");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(30, 460, 180, 50);

        notadoptedButton.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup3.add(notadoptedButton);
        notadoptedButton.setFont(new java.awt.Font("Ink Free", 0, 24)); // NOI18N
        notadoptedButton.setForeground(new java.awt.Color(255, 255, 255));
        notadoptedButton.setText("not adopted");
        notadoptedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notadoptedButtonActionPerformed(evt);
            }
        });
        jPanel2.add(notadoptedButton);
        notadoptedButton.setBounds(360, 420, 150, 39);

        adoptedButton.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup3.add(adoptedButton);
        adoptedButton.setFont(new java.awt.Font("Ink Free", 0, 24)); // NOI18N
        adoptedButton.setForeground(new java.awt.Color(255, 255, 255));
        adoptedButton.setText("adopted");
        adoptedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adoptedButtonActionPerformed(evt);
            }
        });
        jPanel2.add(adoptedButton);
        adoptedButton.setBounds(250, 420, 110, 39);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("adoption state");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(30, 420, 180, 50);

        jButton1.setBackground(new java.awt.Color(0, 51, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/images/edit th.png"))); // NOI18N
        jButton1.setText("Edit");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(255, 153, 0), null, null));
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(230, 510, 210, 50);

        adoptionDate.setBackground(new java.awt.Color(204, 204, 204));
        adoptionDate.setToolTipText("yyyy/mm/dd");
        jPanel2.add(adoptionDate);
        adoptionDate.setBounds(260, 380, 190, 40);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 80, 650, 560);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void birthdatePetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthdatePetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthdatePetActionPerformed

    private void petNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petNameActionPerformed
                    
        Object obj = evt.getSource();
        if(obj==petName)
        {

        
        try {
            /*String nameofpet=null;
            String birthdatepet=null;
            String colorpet=null;
            String intakeDatePet=null;
            String adoptionDatepet=null;*/
            
            try {
                String sql = "select pet_name , birth_date , gender , size , color , intake_date , breed_id , adoption_state , adoption_date , specie_id from animalsshelter.pets where pet_name = '"+(petName.getSelectedItem().toString())+"'";
                Statement prep = con.createStatement();
                ResultSet rst =  prep.executeQuery(sql);//resultset contain 5 coloumns the pet name
                
                while(rst.next())
                {
                    nameOFpet.setText(rst.getString("pet_name")); //each textfield will have the value of th 5 coloumns we selected from pets table
                    birthdatePet.setText(rst.getString("birth_date"));
                    color.setText(rst.getString("color"));
                    intakeDate.setText(rst.getString("intake_date"));
                    adoptionDate.setText(rst.getString("adoption_date"));
                    genderrr = rst.getString("gender");
                    sizeee = rst.getString("size");
                    adoptionStatement = rst.getInt("adoption_state");
                    spiecesID = rst.getInt("specie_id");
                    breedID = rst.getInt("breed_id");
                }
                prep.close();
                rst.close();
            } catch (SQLException ex) {
                Logger.getLogger(edit_animal1.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //set the breed type in the combobox
            
            String sqlqry = "select breed_name from animalsshelter.breeds where brees_id = "+breedID;
            PreparedStatement prepred = con.prepareStatement(sqlqry);
            ResultSet resultbred =  prepred.executeQuery();
            
            while (resultbred.next()){
                breedCombo.setSelectedItem((resultbred.getString("breed_name")));//(resultbred.getString("breed_name"));
                final_breed.setText(resultbred.getString("breed_name"));
            }
            resultbred.close();
            resultbred.close();
            
            // adoption stete previous value
        
            switch (adoptionStatement) {
                case 0:
                    notadoptedButton.setSelected(true);
                    break;
                case 1:
                    adoptedButton.setSelected(true);
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Error! No Adoption Statement Found.");
                    break;
            }
            
            // gender previous value
            
            switch (genderrr) {
                case "Male":
                    malebutton.setSelected(true);
                    break;
                case "Female":
                    femalebuton.setSelected(true);
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Error! No Gender Found.");
                    break;
            }
            
            // size previous value
            switch (sizeee) {
                case "Small":
                    smallB.setSelected(true);
                    break;
                case "Medium":
                    mediumB.setSelected(true);
                    break;
                case "Large":
                    largB.setSelected(true);
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Error! No Gender Found.");
                    break;
            }
            
            // breed previous value
            
            switch (spiecesID) {
                case 1:
                    dog.setSelected(true);
                    break;
                case 2:
                    cat.setSelected(true);
                    break;
                case 3:
                    bird.setSelected(true);
                    break;
                case 4:
                    rabbit.setSelected(true);
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Error! No Speices Found.");
                    break;
            }
            
            fillBreedscombo();
            
        } catch (SQLException ex) {
            Logger.getLogger(edit_animal1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }

   
    }//GEN-LAST:event_petNameActionPerformed

    private void malebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_malebuttonActionPerformed
        genderrr = "Male";
    }//GEN-LAST:event_malebuttonActionPerformed

    private void femalebutonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femalebutonActionPerformed
        genderrr = "Female";
    }//GEN-LAST:event_femalebutonActionPerformed

    private void smallBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smallBActionPerformed
        sizeee = "Small";
    }//GEN-LAST:event_smallBActionPerformed

    private void mediumBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mediumBActionPerformed
       sizeee = "Medium";
    }//GEN-LAST:event_mediumBActionPerformed

    private void largBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_largBActionPerformed
       sizeee = "Large";
    }//GEN-LAST:event_largBActionPerformed

    private void adoptedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adoptedButtonActionPerformed
        adoptionStatement = 1;
    }//GEN-LAST:event_adoptedButtonActionPerformed

    private void notadoptedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notadoptedButtonActionPerformed
        adoptionStatement = 0;
    }//GEN-LAST:event_notadoptedButtonActionPerformed

    private void dogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dogActionPerformed
         spiecesID = 1;
        // breedCombo.removeAllItems();
        fillBreedscombo();
    }//GEN-LAST:event_dogActionPerformed

    private void catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catActionPerformed
         spiecesID = 2;
         //breedCombo.removeAllItems();
        fillBreedscombo();
    }//GEN-LAST:event_catActionPerformed

    private void birdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birdActionPerformed
         spiecesID = 3;
         //breedCombo.removeAllItems();
        fillBreedscombo();
    }//GEN-LAST:event_birdActionPerformed

    private void rabbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rabbitActionPerformed
         spiecesID = 4;
         //breedCombo.removeAllItems();
        fillBreedscombo();
    }//GEN-LAST:event_rabbitActionPerformed

    private void breedComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breedComboActionPerformed
       Object obj2 = evt.getSource();
        if(obj2==breedCombo)
        {
           final_breed.setText(breedCombo.getSelectedItem().toString());
        }
    }//GEN-LAST:event_breedComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                int animalID  =0 ;
                java.sql.Date sDate3 = null;
        try { 
            String qury = "select pet_id from animalsshelter.pets where pet_name = '"+(petName.getSelectedItem().toString())+"'";
            Statement pss;
            pss = con.createStatement();
            ResultSet rst =  pss.executeQuery(qury);//resultset contain the animal id
            while(rst.next()){
                animalID = rst.getInt(1);}
            pss.close();
            rst.close();
            
            try {
                PreparedStatement state;
                java.sql.Date sDateBirth = null ;
                java.sql.Date sDateIntake = null ;
                java.sql.Date sDateAdoption = null;
                //fill the birth date
                if(birthdatePet.getText().isBlank())
                    {
                        JOptionPane.showMessageDialog(null, "Please Fill The Birth Date Field!");
                    }
                try {
                    Date birthd = new SimpleDateFormat("yyyy-MM-dd").parse(birthdatePet.getText());
                    sDateBirth = convertUtilToSql(birthd); // to convert from javaDate to sqlDate   
                } catch (ParseException parseException) {
                    JOptionPane.showMessageDialog(null, "Please Fill The Date Field In The Form yyyy-mm-dd");
                }
                // fill the intake date
                if(intakeDate.getText().isBlank())
                    {
                        JOptionPane.showMessageDialog(null, "Please Fill The Intake Date Field!");
                    }
                try {
                    Date inD = new SimpleDateFormat("yyyy-MM-dd").parse(intakeDate.getText());
                    sDateIntake = convertUtilToSql(inD);
                } catch (ParseException parseException) {
                    JOptionPane.showMessageDialog(null, "Please Fill The Date Field In The Form yyyy-mm-dd");
                }                
                
                boolean adopt_date_found ;
                
                if(adoptionStatement == 0)
                {
                   adopt_date_found = false;
                }
                else
                {
                    adopt_date_found = true;
                }
                
                //get the breed id and store it in a variable to send it to the update statement 
                
                String breedValue = final_breed.getText();//get the breed name from combobox
                
                String sql2= "select brees_id from animalsshelter.breeds WHERE breed_name = '"+breedValue+"'";//get the breedId from table using the breed name from the combobox
                Statement prep2 = con.createStatement();
                ResultSet rst2 =  prep2.executeQuery(sql2);//resultset contain the breedId
                int brId=0;
                while(rst2.next()){
                    brId = rst2.getInt(1);}
                prep2.close();
                rst2.close();//now the variable brId = the id of the selected breed from combobox
                
                //check when the animal is adopted , adoption date must get a value
                
                if(adoptionStatement==1)
                {
                    if(adoptionDate.getText().isBlank())
                    {
                        JOptionPane.showMessageDialog(null, "You Did Not Entered an Adoption Date!!");
                        JOptionPane.showMessageDialog(null, "Auto Date Inserted.");
                        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                        Date date = new Date();
                        dateFormat.format(date);
                        sDate3 = convertUtilToSql(date);
                    }
                    
                    String ubdatequry = "update animalsshelter.pets set specie_id = "+spiecesID+", breed_id = "+brId+", pet_name = '"+
                        nameOFpet.getText()+"' , birth_date = '"+sDateBirth+"' , gender = '"+genderrr+"' , size = '"+
                        sizeee+"' , color = '"+color.getText()+"' , intake_date = '"+sDateIntake+"' , adoption_state = "+
                        adoptionStatement+", adoption_date = '"+ sDate3 +"' where pet_id = "+animalID ;
                state = con.prepareStatement(ubdatequry);
                state.executeUpdate();
                JOptionPane.showMessageDialog(null, "Animal Edited Successfully.");
                state.close();
                    
                }
                
                else 
                {
                    Date inD = null;
                    try {
                        inD = new SimpleDateFormat("yyyy-m-d").parse("0000-00-00");
                        sDate3 = convertUtilToSql(inD);
                    } catch (ParseException ex) {
                        Logger.getLogger(edit_animal1.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                   // String qry = "delete adoption_date from animalsshelter.pets where pet_id = "+animalID;
                    JOptionPane.showConfirmDialog(null, "No Adoption Date For This Animal");
                     String ubdatequry = "update animalsshelter.pets set specie_id = "+spiecesID+", breed_id = "+brId+", pet_name = '"+
                        nameOFpet.getText()+"' , birth_date = '"+sDateBirth+"' , gender = '"+genderrr+"' , size = '"+
                        sizeee+"' , color = '"+color.getText()+"' , intake_date = '"+sDateIntake+"' , adoption_state = "+
                        adoptionStatement+", adoption_date = '"+ sDate3 +"' where pet_id = "+animalID ;
                state = con.prepareStatement(ubdatequry);
                state.executeUpdate();
                JOptionPane.showMessageDialog(null, "Animal Edited Successfully.");
                state.close();
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(edit_animal1.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (SQLException ex) {
            Logger.getLogger(edit_animal1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

     void createConnection()
    {
         String url = "jdbc:mysql://127.0.0.1:3306/animalsshelter";
        try {
            con = DriverManager.getConnection(url, "root", "4434544345");
        } catch (SQLException ex) {
            Logger.getLogger(edit_animal1.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
    
     private void fillPetNamecombo()
     {
        try {
            String sqll = "SELECT * FROM animalsshelter.pets";
            PreparedStatement prep = con.prepareStatement(sqll);
            ResultSet rst =  prep.executeQuery();
            
            while (rst.next()){
                String petsNames = rst.getString("pet_name");
                petName.addItem(petsNames);
                
            }
            prep.close();
            rst.close();
            
            }
        catch (SQLException ex) {
            Logger.getLogger(edit_animal1.class.getName()).log(Level.SEVERE, null, ex);
        }
         
     }
     
      private void fillBreedscombo()
     {
         
         
        try {
            String sqll = "select * from animalsshelter.breeds where specieID = "+spiecesID;
            PreparedStatement prep = con.prepareStatement(sqll);
            ResultSet rst =  prep.executeQuery();
            
            while (rst.next()){
                breedCombo.addItem(rst.getString("breed_name"));
                
            }
            prep.close();
            rst.close();
            
            }
        catch (SQLException ex) {
            Logger.getLogger(edit_animal1.class.getName()).log(Level.SEVERE, null, ex);
        }
         
     }
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(edit_animal1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(edit_animal1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(edit_animal1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(edit_animal1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new edit_animal1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton adoptedButton;
    private javax.swing.JTextField adoptionDate;
    private javax.swing.JRadioButton bird;
    private javax.swing.JTextField birthdatePet;
    private javax.swing.JComboBox<String> breedCombo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JRadioButton cat;
    private javax.swing.JTextField color;
    private javax.swing.JRadioButton dog;
    private javax.swing.JRadioButton femalebuton;
    private javax.swing.JTextField final_breed;
    private javax.swing.JTextField intakeDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton largB;
    private javax.swing.JRadioButton malebutton;
    private javax.swing.JRadioButton mediumB;
    private javax.swing.JTextField nameOFpet;
    private javax.swing.JRadioButton notadoptedButton;
    private javax.swing.JComboBox<String> petName;
    private javax.swing.JRadioButton rabbit;
    private javax.swing.JRadioButton smallB;
    // End of variables declaration//GEN-END:variables
}
