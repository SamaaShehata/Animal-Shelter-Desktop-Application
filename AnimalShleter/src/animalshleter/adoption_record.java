/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package animalshleter;

import static animalshleter.add_animal1.convertUtilToSql;
import static animalshleter.login2.ID;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.Connection;  
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
public class adoption_record extends javax.swing.JFrame {

    Connection con;
    //int meddicalstate=0;
    int clientId = 0;  
    int allrgy=0;
    int spiecesID =0;
    String speciesid=null;
    int membershipid = 0;
    int meddicalSt =0;
    int petID=0;
    int breedID =0;
    String breed=null;
    public adoption_record() {
        initComponents();
        createConnection();
        fillfirstNamecombo();
       fillLastNamecombo();
       fillPetNamecombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lastncombo = new javax.swing.JComboBox<>();
        firstncombo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        petnamecombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("animal shelter");
        setMinimumSize(new java.awt.Dimension(650, 640));
        setPreferredSize(new java.awt.Dimension(650, 640));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(204, 153, 0));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("New adoption");
        jPanel1.add(jLabel6);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 650, 80);

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("adopter last name");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(80, 200, 240, 29);

        jPanel2.add(lastncombo);
        lastncombo.setBounds(390, 210, 170, 30);

        firstncombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstncomboActionPerformed(evt);
            }
        });
        jPanel2.add(firstncombo);
        firstncombo.setBounds(390, 90, 170, 30);

        jButton1.setBackground(new java.awt.Color(0, 51, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/images/login.png"))); // NOI18N
        jButton1.setText("confirm");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(255, 102, 0), null, null));
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(230, 490, 220, 50);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("adopter first anme");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(70, 80, 240, 29);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("pet name");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(80, 310, 210, 29);

        petnamecombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petnamecomboActionPerformed(evt);
            }
        });
        jPanel2.add(petnamecombo);
        petnamecombo.setBounds(390, 320, 170, 30);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 80, 650, 560);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            java.sql.Date adoptionDate = null;
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Date date = new Date();
            dateFormat.format(date);
            adoptionDate = convertUtilToSql(date);
            String medi =null;
            if(meddicalSt == 1)
                medi = "No allergy";
            else if(meddicalSt == 2)
                medi = "Dog allergy";
            else if(meddicalSt == 3)
                medi = "Cat allergy";
            else if(meddicalSt == 4)
                medi = "Bird allergy";
            
            String sqq ="insert into animalsshelter.adoption_data (adoption_date,employee_id,membershipID,adapter_first_name,adapter_last_name,adapter_medical_state,petID,pet_name,specie,breed)"
                    + " values ('"+adoptionDate+"',"+ID+","+membershipid+", '"+firstncombo.getSelectedItem().toString()+"' ,"
                    + " '"+lastncombo.getSelectedItem().toString()+"' , '" +medi+"' ,"+petID+" , "
                    + " '"+petnamecombo.getSelectedItem().toString()+"' , '"+speciesid+"' , '"+breed +"')";
            PreparedStatement sttmtt = con.prepareStatement(sqq);
            sttmtt.executeUpdate();
            sttmtt.close();
            JOptionPane.showMessageDialog(null, "Adoption done!");
        } catch (SQLException ex) {
            Logger.getLogger(adoption_record.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void firstncomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstncomboActionPerformed
         Object obj = evt.getSource();
        if(obj==firstncombo)
        {
                try {
                    String sql = "select membership_id from animalsshelter.clients_info where first_name = '" + (firstncombo.getSelectedItem().toString()) + "'";
                    Statement prep = con.createStatement();
                    ResultSet rst = prep.executeQuery(sql);//resultset contain 1 coloumn the first name
                    
                    while (rst.next())
                    {
                        membershipid = rst.getInt(1);
                    }
                    prep.close();
                    rst.close();
                }
                catch (SQLException ex)
                {
                    Logger.getLogger(adoption_record.class.getName()).log(Level.SEVERE, null, ex);
                }
                fillLastNamecombo();
                
           try {    
                String sqlqry = "select last_name , medical_state from animalsshelter.clients_info where membership_id = "+membershipid;
                PreparedStatement prepred = con.prepareStatement(sqlqry);
                ResultSet resultbred =  prepred.executeQuery();
                
                while (resultbred.next()){
                    lastncombo.setSelectedItem(resultbred.getString("last_name"));
                    meddicalSt= resultbred.getInt("medical_state");                    
                }
                prepred.close();
                resultbred.close();
                
            } 
            catch (SQLException ex)
            {
                Logger.getLogger(adoption_record.class.getName()).log(Level.SEVERE, null, ex);
            }
            //lastNCombo.removeAllItems();
            
        }
    }//GEN-LAST:event_firstncomboActionPerformed

    private void petnamecomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petnamecomboActionPerformed
        
        Object obj = evt.getSource();
        if(obj==petnamecombo)
        {
        try {
            String sqll = "SELECT pet_id , specie_id , breed_id FROM animalsshelter.pets where pet_name = '"+(petnamecombo.getSelectedItem().toString())+"'";
            PreparedStatement prep = con.prepareStatement(sqll);
            ResultSet rst =  prep.executeQuery();
            
            while (rst.next()){
                petID = rst.getInt("pet_id");
                spiecesID=rst.getInt("specie_id");
                breedID = rst.getInt("breed_id");
            }
            prep.close();
            rst.close();
            
            }
        catch (SQLException ex) {
            Logger.getLogger(adoption_record.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            String sqll = "SELECT breed_name FROM animalsshelter.breeds where brees_id = "+breedID;
            PreparedStatement prep = con.prepareStatement(sqll);
            ResultSet rst =  prep.executeQuery();
            
            while (rst.next()){
                breed=rst.getString("breed_name");
            }
            prep.close();
            rst.close();
            
            }
        catch (SQLException ex) {
            Logger.getLogger(adoption_record.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        if(spiecesID == 1)
            speciesid = "Dog";
        else if(spiecesID == 2)
            speciesid = "Cat";
        else if(spiecesID == 3)
            speciesid = "Bird";
        else if(spiecesID == 4)
            speciesid = "Rabbit";
        
        }
    }//GEN-LAST:event_petnamecomboActionPerformed

    void fillfirstNamecombo()
     {
        try {
            String sqll = "SELECT first_name FROM animalsshelter.clients_info";
            PreparedStatement prep = con.prepareStatement(sqll);
            ResultSet rst =  prep.executeQuery();
            
            while (rst.next()){
                firstncombo.addItem(rst.getString("first_name"));
                
            }
            prep.close();
            rst.close();
            
            }
        catch (SQLException ex) {
            Logger.getLogger(adoption_record.class.getName()).log(Level.SEVERE, null, ex);
        }
         
     }
     
     void fillLastNamecombo()
     {
        // lastNCombo.removeAllItems();
        try {
            String sqll = "SELECT last_name FROM animalsshelter.clients_info where first_name = '"+(firstncombo.getSelectedItem().toString())+"'";
            PreparedStatement prep = con.prepareStatement(sqll);
            ResultSet rst =  prep.executeQuery();
            
            while (rst.next()){
                lastncombo.addItem(rst.getString("last_name"));
            }
            prep.close();
            rst.close();
            
            }
        catch (SQLException ex) {
            Logger.getLogger(adoption_record.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
     
      void fillPetNamecombo()
     {
        try {
            String sqll = "SELECT * FROM animalsshelter.pets";
            PreparedStatement prep = con.prepareStatement(sqll);
            ResultSet rst =  prep.executeQuery();
            
            while (rst.next()){
                String petsNames = rst.getString("pet_name");
                petnamecombo.addItem(petsNames);
                
            }
            prep.close();
            rst.close();
            
            }
        catch (SQLException ex) {
            Logger.getLogger(adoption_record.class.getName()).log(Level.SEVERE, null, ex);
        }
         
     }
      
      
     
     void createConnection()
    {
         String url = "jdbc:mysql://127.0.0.1:3306/animalsshelter";
        try {
            con = DriverManager.getConnection(url, "root", "4434544345");
        } catch (SQLException ex) {
            Logger.getLogger(adoption_record.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adoption_record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adoption_record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adoption_record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adoption_record.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adoption_record().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> firstncombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> lastncombo;
    private javax.swing.JComboBox<String> petnamecombo;
    // End of variables declaration//GEN-END:variables
}
